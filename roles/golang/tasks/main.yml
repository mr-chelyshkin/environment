---
- block:
  - name: Check OS
    fail:
      msg: "Unsupported platform: {{ ansible_os_family }}"
    when: ansible_os_family not in ['Debian', 'RedHat', 'Darwin']
  - name: Check Architecture
    fail:
      msg: "Unsupported architecture: {{ ansible_architecture }}"
    when: ansible_architecture not in golang_arch_map

  - name: Get passwd info for all users
    getent:
      database: passwd
  - name: Prepare user info
    set_fact:
      user_path: "{{ ansible_facts.getent_passwd[item][4] }}"
      user_name: "{{ item }}"
    loop: "{{ golang_users }}"
    when: ansible_facts.getent_passwd[item] is defined
    register: user_facts

   # Routing rules ...
  - name: Install from sources
    block:
      - include_tasks: source.yml
      - include_tasks: source_env.yml
        loop: "{{ user_facts.results }}"
        vars:
          user_path: "{{ item.ansible_facts.user_path }}"
    when:
     - ansible_os_family in ['Debian', 'RedHat', 'Darwin']
     - golang_role__type == 'source'

  - name: Install GVM
    block:
      - include_tasks: gvm.yml
      - include_tasks: gvm_go.yml
    when:
      - ansible_os_family in ['Debian', 'RedHat', 'Darwin']
      - golang_role__type == 'gvm'

  when:
  - golang_required